/**
 * The MIT License (MIT)
 * Copyright (c) 2017-present Dmitry Soshnikov <dmitry.soshnikov@gmail.com>
 */

'use strict';

const Bit = require('../Bit');
const Gate = require('../../Gate');
const GateTestUtil = require('../../gate-test-util');

const {int16Table} = require('../../../../util/typed-numbers');

/**
 * Testing data.
 */
const data = int16Table([
  {$clock:   -0,  in: 0,  load: 0,  out: 0},
  {$clock:   +0,  in: 0,  load: 0,  out: 0},
  {$clock:   -1,  in: 0,  load: 0,  out: 0},
  {$clock:   +1,  in: 0,  load: 1,  out: 0},
  {$clock:   -2,  in: 0,  load: 1,  out: 0},
  {$clock:   +2,  in: 1,  load: 0,  out: 0},
  {$clock:   -3,  in: 1,  load: 0,  out: 0},
  {$clock:   +3,  in: 1,  load: 1,  out: 0},
  {$clock:   -4,  in: 1,  load: 1,  out: 1},
  {$clock:   +4,  in: 0,  load: 0,  out: 1},
  {$clock:   -5,  in: 0,  load: 0,  out: 1},
  {$clock:   +5,  in: 1,  load: 0,  out: 1},
  {$clock:   -6,  in: 1,  load: 0,  out: 1},
  {$clock:   +6,  in: 0,  load: 1,  out: 1},
  {$clock:   -7,  in: 0,  load: 1,  out: 0},
  {$clock:   +7,  in: 1,  load: 1,  out: 0},
  {$clock:   -8,  in: 1,  load: 1,  out: 1},
  {$clock:   +8,  in: 0,  load: 0,  out: 1},
  {$clock:   -9,  in: 0,  load: 0,  out: 1},
  {$clock:   +9,  in: 0,  load: 0,  out: 1},
  {$clock:  -10,  in: 0,  load: 0,  out: 1},
  {$clock:  +10,  in: 0,  load: 0,  out: 1},
  {$clock:  -11,  in: 0,  load: 0,  out: 1},
  {$clock:  +11,  in: 0,  load: 0,  out: 1},
  {$clock:  -12,  in: 0,  load: 0,  out: 1},
  {$clock:  +12,  in: 0,  load: 0,  out: 1},
  {$clock:  -13,  in: 0,  load: 0,  out: 1},
  {$clock:  +13,  in: 0,  load: 0,  out: 1},
  {$clock:  -14,  in: 0,  load: 0,  out: 1},
  {$clock:  +14,  in: 0,  load: 0,  out: 1},
  {$clock:  -15,  in: 0,  load: 0,  out: 1},
  {$clock:  +15,  in: 0,  load: 0,  out: 1},
  {$clock:  -16,  in: 0,  load: 0,  out: 1},
  {$clock:  +16,  in: 0,  load: 0,  out: 1},
  {$clock:  -17,  in: 0,  load: 0,  out: 1},
  {$clock:  +17,  in: 0,  load: 0,  out: 1},
  {$clock:  -18,  in: 0,  load: 0,  out: 1},
  {$clock:  +18,  in: 0,  load: 0,  out: 1},
  {$clock:  -19,  in: 0,  load: 0,  out: 1},
  {$clock:  +19,  in: 0,  load: 0,  out: 1},
  {$clock:  -20,  in: 0,  load: 0,  out: 1},
  {$clock:  +20,  in: 0,  load: 0,  out: 1},
  {$clock:  -21,  in: 0,  load: 0,  out: 1},
  {$clock:  +21,  in: 0,  load: 0,  out: 1},
  {$clock:  -22,  in: 0,  load: 0,  out: 1},
  {$clock:  +22,  in: 0,  load: 0,  out: 1},
  {$clock:  -23,  in: 0,  load: 0,  out: 1},
  {$clock:  +23,  in: 0,  load: 0,  out: 1},
  {$clock:  -24,  in: 0,  load: 0,  out: 1},
  {$clock:  +24,  in: 0,  load: 0,  out: 1},
  {$clock:  -25,  in: 0,  load: 0,  out: 1},
  {$clock:  +25,  in: 0,  load: 0,  out: 1},
  {$clock:  -26,  in: 0,  load: 0,  out: 1},
  {$clock:  +26,  in: 0,  load: 0,  out: 1},
  {$clock:  -27,  in: 0,  load: 0,  out: 1},
  {$clock:  +27,  in: 0,  load: 0,  out: 1},
  {$clock:  -28,  in: 0,  load: 0,  out: 1},
  {$clock:  +28,  in: 0,  load: 0,  out: 1},
  {$clock:  -29,  in: 0,  load: 0,  out: 1},
  {$clock:  +29,  in: 0,  load: 0,  out: 1},
  {$clock:  -30,  in: 0,  load: 0,  out: 1},
  {$clock:  +30,  in: 0,  load: 0,  out: 1},
  {$clock:  -31,  in: 0,  load: 0,  out: 1},
  {$clock:  +31,  in: 0,  load: 0,  out: 1},
  {$clock:  -32,  in: 0,  load: 0,  out: 1},
  {$clock:  +32,  in: 0,  load: 0,  out: 1},
  {$clock:  -33,  in: 0,  load: 0,  out: 1},
  {$clock:  +33,  in: 0,  load: 0,  out: 1},
  {$clock:  -34,  in: 0,  load: 0,  out: 1},
  {$clock:  +34,  in: 0,  load: 0,  out: 1},
  {$clock:  -35,  in: 0,  load: 0,  out: 1},
  {$clock:  +35,  in: 0,  load: 0,  out: 1},
  {$clock:  -36,  in: 0,  load: 0,  out: 1},
  {$clock:  +36,  in: 0,  load: 0,  out: 1},
  {$clock:  -37,  in: 0,  load: 0,  out: 1},
  {$clock:  +37,  in: 0,  load: 0,  out: 1},
  {$clock:  -38,  in: 0,  load: 0,  out: 1},
  {$clock:  +38,  in: 0,  load: 0,  out: 1},
  {$clock:  -39,  in: 0,  load: 0,  out: 1},
  {$clock:  +39,  in: 0,  load: 0,  out: 1},
  {$clock:  -40,  in: 0,  load: 0,  out: 1},
  {$clock:  +40,  in: 0,  load: 0,  out: 1},
  {$clock:  -41,  in: 0,  load: 0,  out: 1},
  {$clock:  +41,  in: 0,  load: 0,  out: 1},
  {$clock:  -42,  in: 0,  load: 0,  out: 1},
  {$clock:  +42,  in: 0,  load: 0,  out: 1},
  {$clock:  -43,  in: 0,  load: 0,  out: 1},
  {$clock:  +43,  in: 0,  load: 0,  out: 1},
  {$clock:  -44,  in: 0,  load: 0,  out: 1},
  {$clock:  +44,  in: 0,  load: 0,  out: 1},
  {$clock:  -45,  in: 0,  load: 0,  out: 1},
  {$clock:  +45,  in: 0,  load: 0,  out: 1},
  {$clock:  -46,  in: 0,  load: 0,  out: 1},
  {$clock:  +46,  in: 0,  load: 0,  out: 1},
  {$clock:  -47,  in: 0,  load: 0,  out: 1},
  {$clock:  +47,  in: 0,  load: 0,  out: 1},
  {$clock:  -48,  in: 0,  load: 0,  out: 1},
  {$clock:  +48,  in: 0,  load: 0,  out: 1},
  {$clock:  -49,  in: 0,  load: 0,  out: 1},
  {$clock:  +49,  in: 0,  load: 0,  out: 1},
  {$clock:  -50,  in: 0,  load: 0,  out: 1},
  {$clock:  +50,  in: 0,  load: 0,  out: 1},
  {$clock:  -51,  in: 0,  load: 0,  out: 1},
  {$clock:  +51,  in: 0,  load: 0,  out: 1},
  {$clock:  -52,  in: 0,  load: 0,  out: 1},
  {$clock:  +52,  in: 0,  load: 0,  out: 1},
  {$clock:  -53,  in: 0,  load: 0,  out: 1},
  {$clock:  +53,  in: 0,  load: 0,  out: 1},
  {$clock:  -54,  in: 0,  load: 0,  out: 1},
  {$clock:  +54,  in: 0,  load: 0,  out: 1},
  {$clock:  -55,  in: 0,  load: 0,  out: 1},
  {$clock:  +55,  in: 0,  load: 0,  out: 1},
  {$clock:  -56,  in: 0,  load: 0,  out: 1},
  {$clock:  +56,  in: 0,  load: 0,  out: 1},
  {$clock:  -57,  in: 0,  load: 0,  out: 1},
  {$clock:  +57,  in: 0,  load: 1,  out: 1},
  {$clock:  -58,  in: 0,  load: 1,  out: 0},
  {$clock:  +58,  in: 1,  load: 0,  out: 0},
  {$clock:  -59,  in: 1,  load: 0,  out: 0},
  {$clock:  +59,  in: 1,  load: 0,  out: 0},
  {$clock:  -60,  in: 1,  load: 0,  out: 0},
  {$clock:  +60,  in: 1,  load: 0,  out: 0},
  {$clock:  -61,  in: 1,  load: 0,  out: 0},
  {$clock:  +61,  in: 1,  load: 0,  out: 0},
  {$clock:  -62,  in: 1,  load: 0,  out: 0},
  {$clock:  +62,  in: 1,  load: 0,  out: 0},
  {$clock:  -63,  in: 1,  load: 0,  out: 0},
  {$clock:  +63,  in: 1,  load: 0,  out: 0},
  {$clock:  -64,  in: 1,  load: 0,  out: 0},
  {$clock:  +64,  in: 1,  load: 0,  out: 0},
  {$clock:  -65,  in: 1,  load: 0,  out: 0},
  {$clock:  +65,  in: 1,  load: 0,  out: 0},
  {$clock:  -66,  in: 1,  load: 0,  out: 0},
  {$clock:  +66,  in: 1,  load: 0,  out: 0},
  {$clock:  -67,  in: 1,  load: 0,  out: 0},
  {$clock:  +67,  in: 1,  load: 0,  out: 0},
  {$clock:  -68,  in: 1,  load: 0,  out: 0},
  {$clock:  +68,  in: 1,  load: 0,  out: 0},
  {$clock:  -69,  in: 1,  load: 0,  out: 0},
  {$clock:  +69,  in: 1,  load: 0,  out: 0},
  {$clock:  -70,  in: 1,  load: 0,  out: 0},
  {$clock:  +70,  in: 1,  load: 0,  out: 0},
  {$clock:  -71,  in: 1,  load: 0,  out: 0},
  {$clock:  +71,  in: 1,  load: 0,  out: 0},
  {$clock:  -72,  in: 1,  load: 0,  out: 0},
  {$clock:  +72,  in: 1,  load: 0,  out: 0},
  {$clock:  -73,  in: 1,  load: 0,  out: 0},
  {$clock:  +73,  in: 1,  load: 0,  out: 0},
  {$clock:  -74,  in: 1,  load: 0,  out: 0},
  {$clock:  +74,  in: 1,  load: 0,  out: 0},
  {$clock:  -75,  in: 1,  load: 0,  out: 0},
  {$clock:  +75,  in: 1,  load: 0,  out: 0},
  {$clock:  -76,  in: 1,  load: 0,  out: 0},
  {$clock:  +76,  in: 1,  load: 0,  out: 0},
  {$clock:  -77,  in: 1,  load: 0,  out: 0},
  {$clock:  +77,  in: 1,  load: 0,  out: 0},
  {$clock:  -78,  in: 1,  load: 0,  out: 0},
  {$clock:  +78,  in: 1,  load: 0,  out: 0},
  {$clock:  -79,  in: 1,  load: 0,  out: 0},
  {$clock:  +79,  in: 1,  load: 0,  out: 0},
  {$clock:  -80,  in: 1,  load: 0,  out: 0},
  {$clock:  +80,  in: 1,  load: 0,  out: 0},
  {$clock:  -81,  in: 1,  load: 0,  out: 0},
  {$clock:  +81,  in: 1,  load: 0,  out: 0},
  {$clock:  -82,  in: 1,  load: 0,  out: 0},
  {$clock:  +82,  in: 1,  load: 0,  out: 0},
  {$clock:  -83,  in: 1,  load: 0,  out: 0},
  {$clock:  +83,  in: 1,  load: 0,  out: 0},
  {$clock:  -84,  in: 1,  load: 0,  out: 0},
  {$clock:  +84,  in: 1,  load: 0,  out: 0},
  {$clock:  -85,  in: 1,  load: 0,  out: 0},
  {$clock:  +85,  in: 1,  load: 0,  out: 0},
  {$clock:  -86,  in: 1,  load: 0,  out: 0},
  {$clock:  +86,  in: 1,  load: 0,  out: 0},
  {$clock:  -87,  in: 1,  load: 0,  out: 0},
  {$clock:  +87,  in: 1,  load: 0,  out: 0},
  {$clock:  -88,  in: 1,  load: 0,  out: 0},
  {$clock:  +88,  in: 1,  load: 0,  out: 0},
  {$clock:  -89,  in: 1,  load: 0,  out: 0},
  {$clock:  +89,  in: 1,  load: 0,  out: 0},
  {$clock:  -90,  in: 1,  load: 0,  out: 0},
  {$clock:  +90,  in: 1,  load: 0,  out: 0},
  {$clock:  -91,  in: 1,  load: 0,  out: 0},
  {$clock:  +91,  in: 1,  load: 0,  out: 0},
  {$clock:  -92,  in: 1,  load: 0,  out: 0},
  {$clock:  +92,  in: 1,  load: 0,  out: 0},
  {$clock:  -93,  in: 1,  load: 0,  out: 0},
  {$clock:  +93,  in: 1,  load: 0,  out: 0},
  {$clock:  -94,  in: 1,  load: 0,  out: 0},
  {$clock:  +94,  in: 1,  load: 0,  out: 0},
  {$clock:  -95,  in: 1,  load: 0,  out: 0},
  {$clock:  +95,  in: 1,  load: 0,  out: 0},
  {$clock:  -96,  in: 1,  load: 0,  out: 0},
  {$clock:  +96,  in: 1,  load: 0,  out: 0},
  {$clock:  -97,  in: 1,  load: 0,  out: 0},
  {$clock:  +97,  in: 1,  load: 0,  out: 0},
  {$clock:  -98,  in: 1,  load: 0,  out: 0},
  {$clock:  +98,  in: 1,  load: 0,  out: 0},
  {$clock:  -99,  in: 1,  load: 0,  out: 0},
  {$clock:  +99,  in: 1,  load: 0,  out: 0},
  {$clock: -100,  in: 1,  load: 0,  out: 0},
  {$clock: +100,  in: 1,  load: 0,  out: 0},
  {$clock: -101,  in: 1,  load: 0,  out: 0},
  {$clock: +101,  in: 1,  load: 0,  out: 0},
  {$clock: -102,  in: 1,  load: 0,  out: 0},
  {$clock: +102,  in: 1,  load: 0,  out: 0},
  {$clock: -103,  in: 1,  load: 0,  out: 0},
  {$clock: +103,  in: 1,  load: 0,  out: 0},
  {$clock: -104,  in: 1,  load: 0,  out: 0},
  {$clock: +104,  in: 1,  load: 0,  out: 0},
  {$clock: -105,  in: 1,  load: 0,  out: 0},
  {$clock: +105,  in: 1,  load: 0,  out: 0},
  {$clock: -106,  in: 1,  load: 0,  out: 0},
  {$clock: +106,  in: 1,  load: 0,  out: 0},
  {$clock: -107,  in: 1,  load: 0,  out: 0},
]);

describe('Bit', () => {
  it('Bit interface', () => {
    expect(() => GateTestUtil.autoTestGate(Bit))
      .not.toThrow();
  });

  it('testing data', () => {
    Gate.resetClock();

    expect(() => GateTestUtil.testTruthTable(data, Bit.defaultFromSpec()))
      .not.toThrow();
  });
});